name: Selenium Agent Workflow
env:
  DH_DOCKER_IMAGE: stuartshay/azuredevopskats-selenium
  DOCKER_SCRIPT_PATH: docker/selenium
  DOCKER_FILE: "docker/selenium/Dockerfile"
  DOCKER_IMAGE_TAG: v96.0-${{ github.sha }}
  DOCKER_IMAGE_PLATFORM: linux/amd64,linux/arm/v7
  BUILD_NUMBER: ${{ github.sha }}

on:
  workflow_dispatch:
  push:
    paths:
      - "docker/selenium/**"

    branches:
      - master
      - develop
      - "feature/**"
      - "fix/**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN_AZUREKATS }}

      - name: Build image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.DOCKER_SCRIPT_PATH }}
          platforms: linux/amd64
          build-args: |
            BUILD_NUMBER=${{ env.BUILD_NUMBER }}
          file: ${{ env.DOCKER_FILE }}
          tags: ${{ env.DH_DOCKER_IMAGE }}:${{ env.DOCKER_IMAGE_TAG}},${{ env.DH_DOCKER_IMAGE }}:latest
          outputs: type=docker,dest=image.tar
          cache-from: type=registry,ref=${{ env.DH_DOCKER_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.DH_DOCKER_IMAGE }}:buildcache,mode=max

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: docker
          path: image.tar

  publish:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Load images
        run: |
          docker load --input docker/image.tar

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN_AZUREKATS }}

      - name: Docker Hub Registry Push
        run: docker push ${{ env.DH_DOCKER_IMAGE }} --all-tags

  cleanup:
    runs-on: ubuntu-latest
    needs: [publish]
    steps:
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: docker
