version: '3.8'

services:

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.2
    entrypoint: /scripts/entrypoint-elastic.sh
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
      - ./elastic/scripts:/scripts
    ports:
      - 9200:9200
    networks:
      - elastic
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'

  kib01:
    image: docker.elastic.co/kibana/kibana:${TAG}
    container_name: kib01
    depends_on:
      es01:
        condition: service_healthy
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: http://es01:9200
    networks:
      - elastic
    healthcheck:
      interval: 10s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null
        http://localhost:5601/api/status

  logstash:
    image: docker.elastic.co/logstash/logstash:${TAG}
    container_name: logstash
    ### command: ['/bin/bash', '-c', 'cat /usr/local/bin/setup-logstash.sh | tr -d "\r" | bash']
    volumes:
      - ./scripts/setup-logstash.sh:/usr/local/bin/setup-logstash.sh:ro
      - ./logstash/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline/
    networks:
      - elastic
    depends_on:
      es01:
        condition: service_healthy
      kib01:
        condition: service_healthy

  filebeat:
    image: docker.elastic.co/beats/filebeat:${TAG}
    container_name: filebeat
    user: root
    command:
      [
        '/bin/bash',
        '-c',
        'cat /usr/local/bin/setup-beat.sh | tr -d "\r" | bash -s filebeat'
      ]
    volumes:
      - ./scripts/setup-beat.sh:/usr/local/bin/setup-beat.sh:ro
      - ./beats/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      es01:
        condition: service_healthy
    networks:
      - elastic
    healthcheck:
      test: filebeat test config
      interval: 30s
      timeout: 15s
      retries: 5

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:${TAG}
    container_name: metricbeat
    user: root
    command:
      [
        '/bin/bash',
        '-c',
        'cat /usr/local/bin/setup-beat.sh | tr -d "\r" | bash -s metricbeat'
      ]
    ports:
      - 5066
    volumes:
      - ./scripts/setup-beat.sh:/usr/local/bin/setup-beat.sh:ro
      - ./beats/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /proc:/hostfs/proc:ro
      - /:/hostfs:ro
    environment:
      - output.elasticsearch.hosts=['http://es01:9200']
      - setup.kibana.host=kib01:5601
    depends_on:
      es01:
        condition: service_healthy
      kib01:
        condition: service_healthy
    networks:
      - elastic

  heartbeat:
    image: docker.elastic.co/beats/heartbeat:${TAG}
    user: root
    container_name: heartbeat
    command:
      [
        '/bin/bash',
        '-c',
        'cat /usr/local/bin/setup-beat.sh | tr -d "\r" | bash -s heartbeat'
      ]
    volumes:
      - ./scripts/setup-beat.sh:/usr/local/bin/setup-beat.sh:ro
      - ./beats/heartbeat.yml:/usr/share/heartbeat/heartbeat.yml:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      es01:
        condition: service_healthy
    networks:
      - elastic
    healthcheck:
      test: heartbeat test config
      interval: 30s
      timeout: 15s
      retries: 5

  packetbeat:
    image: docker.elastic.co/beats/packetbeat:${TAG}
    container_name: packetbeat
    user: root
    cap_add: [ 'NET_RAW', 'NET_ADMIN' ]
    command:
      [
        '/bin/bash',
        '-c',
        'cat /usr/local/bin/setup-beat.sh | tr -d "\r" | bash -s packetbeat'
      ]
    volumes:
      - ./scripts/setup-beat.sh:/usr/local/bin/setup-beat.sh:ro
      - ./beats/packetbeat.yml:/usr/share/packetbeat/packetbeat.yml:ro
    networks:
      - elastic
    depends_on:
      es01:
        condition: service_healthy

  apm-server:
    image: docker.elastic.co/apm/apm-server:${TAG}
    container_name: apm-server
    depends_on:
      es01:
        condition: service_healthy
      kib01:
        condition: service_healthy
    cap_add: [ "CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID" ]
    cap_drop: [ "ALL" ]
    ports:
      - "8200:8200"
      - "8201:8200"
    command: >
      apm-server -e
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kib01:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=kib01:5601
        -E output.elasticsearch.hosts=["es01:9200"]
    networks:
      - elastic
    healthcheck:
      interval: 10s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null
        http://localhost:8200/

volumes:
  data01:
    driver: local

networks:
  elastic:
    driver: bridge
